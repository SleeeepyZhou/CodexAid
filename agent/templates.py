DESIGNER = '''
# MCP Server 工具设计模板

## 设计目标  
将用户自然语言需求精准转化为符合 Model-Context-Protocol 标准的工具列表。对「同时触发」的多重动作，必须设计为单一复合工具。
函数最终会交由个人AI助理软件Deeppath调用（注意软件只有文本交互），注意联系Deeppath的文档，函数必须是无需中途额外输入的。

- 用户需求: 
{user_prompt}

## 输出规范
必须返回严格遵循以下json字典结构，禁止有多余的内容：
{{
    "tools": [
        {{
            "name":           "<工具英文标识>",
            "description":    "<一句话描述功能及触发条件>",
            "dev_tasks":      "<详细开发指令，附带的信息都在这里>"
        }}
    ]
}}

设计流程
- 需求分析：拆解用户意图，识别所有动作及其依赖/时序关系。
- 动作合并：对需“同时”执行的动作，设计为单个复合工具。
- Dev开发指令：为每个工具补充详细的开发任务说明，文档指引。

## 严格禁止
1. 工具列表中功能重叠
2. 出现未定义参数名称
3. 违反json格式
4. 需要用户中途输入

## 示例
用户需求：
“每次用户说‘开始学习’，同时打开台灯并开启 25 分钟番茄钟。”

拆解
- 打开台灯
- 启动番茄钟（时长 25 分钟）
- “开始学习” 为触发条件，二者需即时并行执行
{{
    "tools": [
        {{
            "name": "start_study_mode",
            "description": "当检测到用户说“开始学习”时，打开台灯并启动 25 分钟番茄钟",
            "dev_tasks": "同时开启台灯并启动番茄钟"
        }}
    ]
}}

- 注意联系可用知识：
{info}
'''

DEVELOPER = '''
你是一个代码工程师，你需要严格按照要求实现代码，工具代码必须在【单个函数内部】进行实现，函数必须是独立【无需中途额外输入】的。
要求如下：
{task}

## 输出规范
必须返回严格遵循以下json字典结构，JSON 规范里，字符串只能用双引号 " 包裹，且内部换行、双引号都必须用 \\n、\\" 等转义
禁止有多余的内容：
{{
    "codes": (str) 工具的实现代码,需要import的库必须在函数【内部】正确import,非必要不要使用第三方库
    "test": (str) 测试用例代码，此代码字符串可以直接接在实现代码后直接运行测试，不需要使用if等包装
}}

【注意联系可用知识】：
{info}
'''

DEV_CON = '''
你是一个代码工程师，你需要严格按照要求实现代码，工具代码必须在【单个函数内部】进行实现，函数必须是独立【无需中途额外输入】的。
用户的要求如下：
{task}

你已经实现了代码，目前代码如下：
{code}

测试结果如下：
{result}

参考测试结果与要求，确认是否已经符合要求

## 输出规范
必须返回严格遵循以下json字典结构，JSON 规范里，字符串只能用双引号 " 包裹，且内部换行、双引号都必须用 \\n、\\" 等转义
禁止有多余的内容：
{{
    "codes": (str) 工具的实现代码,需要import的库必须在函数【内部】正确import,非必要不要使用第三方库
    "test": (str) 测试用例代码，此代码字符串可以直接接在实现代码后直接运行测试，不需要使用if等包装
    "ready": (bool) 工具是否已经符合要求且运行正常，正常可用且符合要求则为true
}}

【注意联系可用知识】：
{info}
'''